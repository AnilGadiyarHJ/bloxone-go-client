/*
Discovery Configuration API V2

The Discovery configuration service is a BloxOne Service that provides configuration for accessing and syncing the Cloud assets   Base Paths:  1. provider: **_/api/cloud_discovery/v2/_**

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package clouddiscovery

import (
	"encoding/json"
)

// checks if the DdidnsrickettsSubAccountListResponseV2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DdidnsrickettsSubAccountListResponseV2{}

// DdidnsrickettsSubAccountListResponseV2 struct for DdidnsrickettsSubAccountListResponseV2
type DdidnsrickettsSubAccountListResponseV2 struct {
	Page                 *ApiPageInfo                 `json:"page,omitempty"`
	Results              []DdidnsrickettsSubAccountV2 `json:"results,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _DdidnsrickettsSubAccountListResponseV2 DdidnsrickettsSubAccountListResponseV2

// NewDdidnsrickettsSubAccountListResponseV2 instantiates a new DdidnsrickettsSubAccountListResponseV2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDdidnsrickettsSubAccountListResponseV2() *DdidnsrickettsSubAccountListResponseV2 {
	this := DdidnsrickettsSubAccountListResponseV2{}
	return &this
}

// NewDdidnsrickettsSubAccountListResponseV2WithDefaults instantiates a new DdidnsrickettsSubAccountListResponseV2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDdidnsrickettsSubAccountListResponseV2WithDefaults() *DdidnsrickettsSubAccountListResponseV2 {
	this := DdidnsrickettsSubAccountListResponseV2{}
	return &this
}

// GetPage returns the Page field value if set, zero value otherwise.
func (o *DdidnsrickettsSubAccountListResponseV2) GetPage() ApiPageInfo {
	if o == nil || IsNil(o.Page) {
		var ret ApiPageInfo
		return ret
	}
	return *o.Page
}

// GetPageOk returns a tuple with the Page field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DdidnsrickettsSubAccountListResponseV2) GetPageOk() (*ApiPageInfo, bool) {
	if o == nil || IsNil(o.Page) {
		return nil, false
	}
	return o.Page, true
}

// HasPage returns a boolean if a field has been set.
func (o *DdidnsrickettsSubAccountListResponseV2) HasPage() bool {
	if o != nil && !IsNil(o.Page) {
		return true
	}

	return false
}

// SetPage gets a reference to the given ApiPageInfo and assigns it to the Page field.
func (o *DdidnsrickettsSubAccountListResponseV2) SetPage(v ApiPageInfo) {
	o.Page = &v
}

// GetResults returns the Results field value if set, zero value otherwise.
func (o *DdidnsrickettsSubAccountListResponseV2) GetResults() []DdidnsrickettsSubAccountV2 {
	if o == nil || IsNil(o.Results) {
		var ret []DdidnsrickettsSubAccountV2
		return ret
	}
	return o.Results
}

// GetResultsOk returns a tuple with the Results field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DdidnsrickettsSubAccountListResponseV2) GetResultsOk() ([]DdidnsrickettsSubAccountV2, bool) {
	if o == nil || IsNil(o.Results) {
		return nil, false
	}
	return o.Results, true
}

// HasResults returns a boolean if a field has been set.
func (o *DdidnsrickettsSubAccountListResponseV2) HasResults() bool {
	if o != nil && !IsNil(o.Results) {
		return true
	}

	return false
}

// SetResults gets a reference to the given []DdidnsrickettsSubAccountV2 and assigns it to the Results field.
func (o *DdidnsrickettsSubAccountListResponseV2) SetResults(v []DdidnsrickettsSubAccountV2) {
	o.Results = v
}

func (o DdidnsrickettsSubAccountListResponseV2) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DdidnsrickettsSubAccountListResponseV2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Page) {
		toSerialize["page"] = o.Page
	}
	if !IsNil(o.Results) {
		toSerialize["results"] = o.Results
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DdidnsrickettsSubAccountListResponseV2) UnmarshalJSON(data []byte) (err error) {
	varDdidnsrickettsSubAccountListResponseV2 := _DdidnsrickettsSubAccountListResponseV2{}

	err = json.Unmarshal(data, &varDdidnsrickettsSubAccountListResponseV2)

	if err != nil {
		return err
	}

	*o = DdidnsrickettsSubAccountListResponseV2(varDdidnsrickettsSubAccountListResponseV2)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "page")
		delete(additionalProperties, "results")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDdidnsrickettsSubAccountListResponseV2 struct {
	value *DdidnsrickettsSubAccountListResponseV2
	isSet bool
}

func (v NullableDdidnsrickettsSubAccountListResponseV2) Get() *DdidnsrickettsSubAccountListResponseV2 {
	return v.value
}

func (v *NullableDdidnsrickettsSubAccountListResponseV2) Set(val *DdidnsrickettsSubAccountListResponseV2) {
	v.value = val
	v.isSet = true
}

func (v NullableDdidnsrickettsSubAccountListResponseV2) IsSet() bool {
	return v.isSet
}

func (v *NullableDdidnsrickettsSubAccountListResponseV2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDdidnsrickettsSubAccountListResponseV2(val *DdidnsrickettsSubAccountListResponseV2) *NullableDdidnsrickettsSubAccountListResponseV2 {
	return &NullableDdidnsrickettsSubAccountListResponseV2{value: val, isSet: true}
}

func (v NullableDdidnsrickettsSubAccountListResponseV2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDdidnsrickettsSubAccountListResponseV2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
